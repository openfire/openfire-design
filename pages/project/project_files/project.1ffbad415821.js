// Generated by CoffeeScript 1.3.3
(function() {
  var ProjectPageController,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  ProjectPageController = (function() {

    function ProjectPageController() {
      var _this = this;
      this.futureGoalDlg = null;
      this.futureGoalFields = ['id', 'summary', 'description'];
      this.goalDlg = null;
      this.goalFields = ['id', 'project', 'summary', 'description', 'amount', 'funding_day_limit', 'deliverable_date'];
      this.tierDlg = null;
      this.tierFields = ['id', 'name', 'description', 'amount', 'next_step_votes', 'backer_limit', 'goal'];
      this.nextStepDlg = null;
      this.nextStepFields = ['id', 'summary', 'description', 'goal'];
      this.richContentFields = ['description'];
      this.init = function() {
        _this.initDlgAction();
        _this.initProjectActions();
        _this.initFollow();
        _this.initKeywords();
        _this.initProjectSidebar();
        $('.editor-field').redactor({
          buttons: ['html', '|', 'formatting', '|', 'bold', 'italic', 'deleted', '|', 'unorderedlist', 'orderedlist', 'outdent', 'indent', 'link', 'fontcolor', 'backcolor', '|', 'alignment', '|', 'horizontalrule']
        });
        $('#start-project-avatar-filepicker').click(_this.startAvatarPicker);
        _this.initVideoChooserDialog();
        if ($('#project-video') && $('#project-video').length) {
          $('#project-video').fitVids();
        }
        $('#project-hd').fitText(1.2, {
          minFontSize: '20px',
          maxFontSize: '40px'
        });
        $('#project-sidebar-name').fitText(1.1, {
          minFontSize: '16px',
          maxFontSize: '32px'
        });
        $('#project-sidebar-progress-bar-text').fitText(1.3, {
          minFontSize: '10px',
          maxFontSize: '18px'
        });
        return $('input.datepicker').datepicker({
          format: 'mm-dd-yyyy'
        });
      };
      this.initProjectSidebar = function() {
        var moreInfoInline, showLessInfo, showMoreInfo;
        showMoreInfo = $('#current-goal-show-more-info-link');
        showLessInfo = $('#current-goal-show-less-info-link');
        moreInfoInline = $('.current-goal-more-info-inline');
        showMoreInfo.click(function() {
          showMoreInfo.hide();
          showLessInfo.show();
          moreInfoInline.css({
            'height': 'auto',
            'max-height': '0px',
            'overflow': 'auto'
          });
          return moreInfoInline.animate({
            'max-height': '200px'
          });
        });
        return showLessInfo.click(function() {
          showMoreInfo.show();
          showLessInfo.hide();
          moreInfoInline.css({
            'overflow': 'hidden'
          });
          return moreInfoInline.animate({
            'height': '0px'
          }, function() {
            return moreInfoInline.css({
              'max-height': '0px'
            });
          });
        });
      };
      this.initFollow = function() {
        $('#project-follow-btn').click(function() {
          var data;
          data = 'project=' + $.openfire.page_vars.project_id;
          return $.openfire.api('POST', 'follow_project', data, function(response) {
            $.simple_alert.alert('You are now following this project! You will recieve updates ' + 'when things happen. Configure your notification settings on your account page.');
            $('#project-follow-btn').hide();
            return $('#project-unfollow-btn').show();
          }, function(error) {
            return $.simple_alert.alert(error.responseText);
          });
        });
        return $('#project-unfollow-btn').click(function() {
          return $.simple_alert.confirm('Are you sure you want to stop following this project?', function(confirmed) {
            var data,
              _this = this;
            if (confirmed) {
              data = 'project=' + $.openfire.page_vars.project_id;
              return $.openfire.api('POST', 'unfollow_project', data, function(response) {
                $.simple_alert.alert('You no longer follow this project.');
                $('#project-follow-btn').show();
                return $('#project-unfollow-btn').hide();
              }, function(error) {
                return $.simple_alert.alert(error.responseText);
              });
            }
          });
        });
      };
      this.initKeywords = function() {
        $('#edit-keywords-btn').click(_this.openKeywordEdit);
        $('#cancel-keywords-btn').click(_this.closeKeywordEdit);
        return $('#save-keywords-btn').click(function() {
          var data;
          data = 'keywords=' + $('#project-keywords').val() + '&project=' + $.openfire.page_vars.project_id;
          return $.openfire.api('POST', 'project_keywords', data, function(response) {
            return _this.closeKeywordEdit();
          }, function(error) {
            return alert(error.responseText);
          });
        });
      };
      this.openKeywordEdit = function() {
        var existing;
        existing = $('#project-keywords').html();
        $('#project-keywords').replaceWith('<input id="project-keywords" value="' + existing + '" />');
        $('#edit-keywords-btn').hide();
        $('#save-keywords-btn').show();
        return $('#cancel-keywords-btn').show();
      };
      this.closeKeywordEdit = function() {
        var existing;
        existing = $('#project-keywords').val();
        $('#project-keywords').replaceWith('<span id="project-keywords">' + existing + '</span>');
        $('#edit-keywords-btn').show();
        $('#save-keywords-btn').hide();
        return $('#cancel-keywords-btn').hide();
      };
      this.startAvatarPicker = function() {
        return filepicker.pick({}, _this.avatarUploaded, _this.avatarUploadError);
      };
      this.avatarUploaded = function(file) {
        var data;
        data = {
          target: 'project',
          id: $.openfire.page_vars.project_id,
          url: file.url,
          name: file.filename,
          mime: file.mimetype,
          size: file.size
        };
        return $.openfire.api('POST', 'set_avatar', data, function(response) {
          return $('#project-avatar-content').html("<img src='" + response + "'>");
        }, function(error) {
          if (error.status === 200) {
            return $('#project-avatar-content').html("<img src='" + error.responseText + "'>");
          } else {
            return alert(error.responseText);
          }
        });
      };
      this.avatarUploadError = function(error) {
        return alert(error);
      };
      this.initVideoChooserDialog = function() {
        var dlg;
        dlg = $('#video-chooser-dlg').modal({
          show: false
        });
        $('#save-video-chooser-btn').click(_this.setProjectVideo);
        $('#close-video-chooser-btn').click(function() {
          return dlg.modal('hide');
        });
        return $('#choose-project-video-btn').click(function() {
          return dlg.modal('show');
        });
      };
      this.setProjectVideo = function() {
        var data;
        data = $('#video-chooser-dlg').find('form').serialize();
        data += '&id=' + $.openfire.page_vars.project_id;
        return $.openfire.api('POST', 'set_project_video', data, function(response) {
          return window.location.reload();
        }, function(error) {
          if (error.status === 200) {
            return window.location.reload();
          } else {
            return alert(error.responseText);
          }
        });
      };
      this.initDlgAction = function() {
        _this = _this;
        _this.futureGoalDlg = $('#future-goal-dlg').modal({
          show: false
        });
        $('#save-future-goal-btn').click(_this.saveFutureGoal);
        $('#close-future-goal-btn').click(function() {
          return _this.futureGoalDlg.modal('hide');
        });
        $('#edit-future-goal').click(_this.editFutureGoal);
        _this.goalDlg = $('#goal-dlg').modal({
          show: false
        });
        $('#save-goal-btn').click(_this.saveGoal);
        $('#close-goal-btn').click(function() {
          return _this.goalDlg.modal('hide');
        });
        $('#edit-current-goal').click(_this.editGoal);
        $('#propose-new-goal').click(_this.proposeGoal);
        $('.edit-pending-goal').click(function() {
          var goalId;
          goalId = this.id.match(/edit-pending-goal-(\w+)/)[1];
          return _this.editPendingGoal(goalId);
        });
        _this.tierDlg = $('#tier-dlg').modal({
          show: false
        });
        $('#save-tier-btn').click(_this.saveTier);
        $('#close-tier-btn').click(function() {
          return _this.tierDlg.modal('hide');
        });
        $('.edit-tier').click(function() {
          var tierId;
          tierId = /edit-tier-(\w+)/.exec(this.id)[1];
          return _this.editTier(tierId);
        });
        $('#add-tier').click(_this.addTier);
        _this.deleteTierDlg = $('#delete-tier-dlg').modal({
          show: false
        });
        $('#delete-tier-delete-btn').click(_this.deleteTier);
        $('#close-delete-tier-btn').click(function() {
          return _this.deleteTierDlg.modal('hide');
        });
        $('.delete-tier').click(function() {
          var tierId;
          tierId = /delete-tier-(\w+)/.exec(this.id)[1];
          return _this.startDeleteTier(tierId);
        });
        _this.nextStepDlg = $('#next-step-dlg').modal({
          show: false
        });
        $('#save-next-step-btn').click(_this.saveNextStep);
        $('#close-next-step-btn').click(function() {
          return _this.nextStepDlg.modal('hide');
        });
        $('.edit-next-step').click(function() {
          var nsId;
          nsId = /edit-next-step-(\w+)/.exec(this.id)[1];
          return _this.editNextStep(nsId);
        });
        $('#add-next-step').click(_this.addNextStep);
        _this.deleteNextStepDlg = $('#delete-next-step-dlg').modal({
          show: false
        });
        $('#delete-next-step-delete-btn').click(_this.deleteNextStep);
        $('#close-delete-next-step-btn').click(function() {
          return _this.deleteNextStepDlg.modal('hide');
        });
        $('.delete-next-step').click(function() {
          var nextStepId;
          nextStepId = /delete-next-step-(\w+)/.exec(this.id)[1];
          return _this.startDeleteNextStep(nextStepId);
        });
        _this.openGoalDlg = $('#open-goal-dlg').modal({
          show: false
        });
        $('#open-goal-now-btn').click(_this.openCurrentGoal);
        $('#cancel-open-goal-btn').click(function() {
          return _this.openGoalDlg.modal('hide');
        });
        $('#open-current-goal').click(_this.startOpenGoal);
        _this.closeGoalDlg = $('#close-goal-dlg').modal({
          show: false
        });
        $('#close-goal-now-btn').click(_this.closeCurrentGoal);
        $('#cancel-close-goal-btn').click(function() {
          return _this.closeGoalDlg.modal('hide');
        });
        return $('#close-current-goal').click(_this.startCloseGoal);
      };
      this.initProjectActions = function() {
        _this = _this;
        $('.of-project-action').click(function() {
          var actionSlug;
          actionSlug = this.id.match(/project-action-([-\w]+)/)[1];
          return _this.performProjectAction(actionSlug);
        });
        $('.of-goal-action').click(function() {
          var actionInfo;
          actionInfo = this.id.match(/goal-action-([-\w]+)-(\d+)/);
          return _this.performProjectAction(actionInfo[1], actionInfo[2]);
        });
        $('.toggle').click(function() {
          $(this).parent().parent().find('.toggle-content').toggle();
          $(this).find('.ui-icon').toggleClass('ui-icon-triangle-1-s');
          return $(this).find('.ui-icon').toggleClass('ui-icon-triangle-1-e');
        });
        return $('.toggle-admin').click(function() {
          $(this).parent().parent().find('.toggle-admin-content').toggle();
          $(this).find('.ui-icon').toggleClass('ui-icon-triangle-1-s');
          return $(this).find('.ui-icon').toggleClass('ui-icon-triangle-1-w');
        });
      };
      this.performProjectAction = function(actionSlug, extra) {
        var postData;
        postData = 'action=' + actionSlug + '&id=' + $.openfire.page_vars.project_id;
        if (extra) {
          postData += '&extra=' + extra;
        }
        return $.ajax({
          type: 'POST',
          url: '/_api/v1/project_action/',
          data: postData,
          success: function(response) {
            alert('Action taken! Response:' + response);
            return window.location.reload();
          },
          error: function(response) {
            return alert('There was an error: ' + response.responseText);
          }
        });
      };
      this.editFutureGoal = function() {
        var field, _i, _len, _ref;
        _ref = _this.futureGoalFields;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          field = _ref[_i];
          if (__indexOf.call(_this.richContentFields, field) >= 0) {
            $('#future-goal-' + field + '-input').redactor().setCode($('#future-goal-' + field).html());
          } else {
            $('#future-goal-' + field + '-input').val($('#future-goal-' + field).html());
          }
        }
        return _this.futureGoalDlg.modal('show');
      };
      this.saveFutureGoal = function() {
        var field, postData, postDict, _i, _len, _ref;
        postDict = {};
        _ref = _this.futureGoalFields;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          field = _ref[_i];
          if (__indexOf.call(_this.richContentFields, field) >= 0) {
            postDict[field] = $('#future-goal-' + field + '-input').redactor().getCode();
          } else {
            postDict[field] = $('#future-goal-' + field + '-input').val();
          }
        }
        postData = JSON.stringify(postDict);
        return $.openfire.api('PUT', 'future_goal/' + postDict['id'], postData, function(response) {
          var _j, _len1, _ref1;
          _ref1 = _this.futureGoalFields;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            field = _ref1[_j];
            if (field !== 'id') {
              $('#future-goal-' + field).html(postDict[field]);
            }
          }
          return _this.futureGoalDlg.modal('hide');
        }, function(response) {
          return alert('Error! ' + response.responseText);
        });
      };
      this.editGoal = function() {
        var field, _i, _len, _ref;
        _ref = _this.goalFields;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          field = _ref[_i];
          if (__indexOf.call(_this.richContentFields, field) >= 0) {
            $('#goal-' + field.replace(/_/g, '-') + '-input').redactor().setCode($('#goal-' + field.replace(/_/g, '-')).html());
          } else {
            $('#goal-' + field.replace(/_/g, '-') + '-input').val($('#goal-' + field.replace(/_/g, '-')).html());
          }
        }
        return _this.goalDlg.modal('show');
      };
      this.proposeGoal = function() {
        var field, _i, _len, _ref;
        _ref = _this.goalFields;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          field = _ref[_i];
          if (__indexOf.call(_this.richContentFields, field) >= 0) {
            $('#goal-' + field.replace(/_/g, '-') + '-input').redactor().setCode('');
          } else {
            $('#goal-' + field.replace(/_/g, '-') + '-input').val('');
          }
        }
        $('#goal-project-input').val($.openfire.page_vars.project_id);
        return _this.goalDlg.modal('show');
      };
      this.editPendingGoal = function(id) {
        var field, val, _i, _len, _ref;
        _ref = _this.goalFields;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          field = _ref[_i];
          val = $('#pending-goal-' + id + ' .goal-' + field.replace(/_/g, '-')).html();
          if (__indexOf.call(_this.richContentFields, field) >= 0) {
            $('#goal-' + field.replace(/_/g, '-') + '-input').redactor().setCode(val);
          } else {
            $('#goal-' + field.replace(/_/g, '-') + '-input').val(val);
          }
        }
        $('#goal-project-input').val($.openfire.page_vars.project_id);
        return _this.goalDlg.modal('show');
      };
      this.saveGoal = function() {
        var field, method, postData, postDict, url, val, _i, _len, _ref;
        postDict = {};
        _ref = _this.goalFields;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          field = _ref[_i];
          if (field === 'id') {
            val = $('#goal-' + field.replace(/_/g, '-') + '-input').val();
            if (val.length) {
              postDict[field] = val;
            }
          } else if (__indexOf.call(_this.richContentFields, field) >= 0) {
            postDict[field] = $('#goal-' + field.replace(/_/g, '-') + '-input').redactor().getCode();
          } else {
            postDict[field] = $('#goal-' + field.replace(/_/g, '-') + '-input').val();
          }
        }
        postData = JSON.stringify(postDict);
        url = 'goal';
        method = 'POST';
        if (__indexOf.call(postDict, 'id') >= 0) {
          url += '/' + postDict['id'];
          method = 'PUT';
        }
        return $.openfire.api(method, url, postData, function(response) {
          var _j, _len1, _ref1;
          _ref1 = _this.goalFields;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            field = _ref1[_j];
            if (field !== 'id') {
              $('#goal-' + field.replace(/_/g, '-')).html(postDict[field]);
            }
          }
          return _this.goalDlg.modal('hide');
        }, function(response) {
          return alert('Error! ' + response.responseText);
        });
      };
      this.editTier = function(tierId) {
        var field, _i, _len, _ref;
        _ref = _this.tierFields;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          field = _ref[_i];
          if (__indexOf.call(_this.richContentFields, field) >= 0) {
            $('#tier-' + field.replace(/_/g, '-') + '-input').redactor().setCode($('#tier-' + tierId).find('.tier-' + field.replace(/_/g, '-')).html());
          } else {
            $('#tier-' + field.replace(/_/g, '-') + '-input').val($('#tier-' + tierId + ' .tier-' + field.replace(/_/g, '-')).html());
          }
        }
        return _this.tierDlg.modal('show');
      };
      this.addTier = function() {
        $('#tier-dlg input').val('');
        $('#tier-goal-input').val($('#tier-goal').html());
        return _this.tierDlg.modal('show');
      };
      this.saveTier = function() {
        var apiMethod, apiUrl, field, postData, postDict, tierId, _i, _len, _ref;
        postDict = {};
        _ref = _this.tierFields;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          field = _ref[_i];
          if (field !== 'id') {
            if (__indexOf.call(_this.richContentFields, field) >= 0) {
              postDict[field] = $('#tier-' + field.replace(/_/g, '-') + '-input').redactor().getCode();
            } else {
              postDict[field] = $('#tier-' + field.replace(/_/g, '-') + '-input').val();
            }
          }
          tierId = $('#tier-id-input').val();
          if (tierId && tierId.length) {
            postDict.id = tierId;
          }
        }
        postData = JSON.stringify(postDict);
        apiUrl = 'tier';
        apiMethod = 'POST';
        if ((postDict.id != null) && postDict.id.length) {
          apiUrl += '/' + postDict.id;
          apiMethod = 'PUT';
        }
        return $.openfire.api(apiMethod, apiUrl, postData, function(response) {
          var _j, _len1, _ref1;
          _ref1 = _this.tierFields;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            field = _ref1[_j];
            if (field !== 'id') {
              $('#tier-' + postDict['id'] + ' .tier-' + field.replace(/_/g, '-')).html(postDict[field]);
            }
          }
          return _this.tierDlg.modal('hide');
        }, function(response) {
          return alert('Error! ' + response.responseText);
        });
      };
      this.editNextStep = function(nsId) {
        var field, _i, _len, _ref;
        _ref = _this.nextStepFields;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          field = _ref[_i];
          if (__indexOf.call(_this.richContentFields, field) >= 0) {
            $('#next-step-' + field.replace(/_/g, '-') + '-input').redactor().setCode($('#next-step-toggle-' + nsId + ' .next-step-' + field.replace(/_/g, '-')).html());
          } else {
            $('#next-step-' + field.replace(/_/g, '-') + '-input').val($('#next-step-toggle-' + nsId + ' .next-step-' + field.replace(/_/g, '-')).html());
          }
        }
        return _this.nextStepDlg.modal('show');
      };
      this.addNextStep = function() {
        $('#next-step-dlg input').val('');
        $('#next-step-goal-input').val($('#next-step-goal').html());
        return _this.nextStepDlg.modal('show');
      };
      this.saveNextStep = function() {
        var apiMethod, apiUrl, field, nextStepId, postData, postDict, _i, _len, _ref;
        postDict = {};
        _ref = _this.nextStepFields;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          field = _ref[_i];
          if (field !== 'id') {
            if (__indexOf.call(_this.richContentFields, field) >= 0) {
              postDict[field] = $('#next-step-' + field.replace(/_/g, '-') + '-input').redactor().getCode();
            } else {
              postDict[field] = $('#next-step-' + field.replace(/_/g, '-') + '-input').val();
            }
          }
          nextStepId = $('#next-step-id-input').val();
          if (nextStepId && nextStepId.length) {
            postDict.id = nextStepId;
          }
        }
        postData = JSON.stringify(postDict);
        apiUrl = 'next_step';
        apiMethod = 'POST';
        if ((postDict.id != null) && postDict.id.length) {
          apiUrl += '/' + postDict.id;
          apiMethod = 'PUT';
        }
        return $.openfire.api(apiMethod, apiUrl, postData, function(response) {
          var _j, _len1, _ref1;
          _ref1 = _this.nextStepFields;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            field = _ref1[_j];
            if (field !== 'id') {
              $('#next-step-toggle-' + postDict['id'] + ' .next-step-' + field.replace(/_/g, '-')).html(postDict[field]);
            }
          }
          return _this.nextStepDlg.modal('hide');
        }, function(response) {
          return alert('Error! ' + response.responseText);
        });
      };
      this.startOpenGoal = function() {
        return _this.openGoalDlg.modal('show');
      };
      this.openCurrentGoal = function() {
        _this.performProjectAction('open-current-project-goal');
        return _this.openGoalDlg.modal('hide');
      };
      this.startCloseGoal = function() {
        return _this.closeGoalDlg.modal('show');
      };
      this.closeCurrentGoal = function() {
        _this.performProjectAction('close-current-project-goal');
        return _this.closeGoalDlg.modal('hide');
      };
      this.startDeleteTier = function(tierId) {
        _this.deleteTierDlg.find('.tier-id-input').val(tierId);
        return _this.deleteTierDlg.modal('show');
      };
      this.deleteTier = function() {
        var data;
        data = {
          id: _this.deleteTierDlg.find('.tier-id-input').val()
        };
        return $.openfire.api('DELETE', 'tier/' + data.id, JSON.stringify(data), function(response) {
          alert('tier deleted');
          return _this.deleteTierDlg.modal('hide');
        }, function(response) {
          return alert('there was an error: ' + response.responseText);
        });
      };
      this.startDeleteNextStep = function(nextStepId) {
        _this.deleteNextStepDlg.find('.next-step-id-input').val(nextStepId);
        return _this.deleteNextStepDlg.modal('show');
      };
      this.deleteNextStep = function() {
        var data;
        data = {
          id: _this.deleteNextStepDlg.find('.next-step-id-input').val()
        };
        return $.openfire.api('DELETE', 'next_step/' + data.id, JSON.stringify(data), function(response) {
          alert('next step deleted');
          return _this.deleteNextStepDlg.modal('hide');
        }, function(response) {
          return alert('there was an error: ' + response.responseText);
        });
      };
    }

    return ProjectPageController;

  })();

  window.ProjectPageController = ProjectPageController;

  $.openfire.controller_classes.project_page = ProjectPageController;

}).call(this);
